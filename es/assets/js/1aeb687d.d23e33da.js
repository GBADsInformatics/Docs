"use strict";(self.webpackChunkdocumentation_server=self.webpackChunkdocumentation_server||[]).push([[8120],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>p});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=n.createContext({}),l=function(e){var a=n.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},c=function(e){var a=l(e.components);return n.createElement(d.Provider,{value:a},e.children)},h={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(t),p=r,u=m["".concat(d,".").concat(p)]||m[p]||h[p]||o;return t?n.createElement(u,s(s({ref:a},c),{},{components:t})):n.createElement(u,s({ref:a},c))}));function p(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var d in a)hasOwnProperty.call(a,d)&&(i[d]=a[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},899:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=t(7462),r=(t(7294),t(3905));const o={sidebar_position:7},s="Metadata",i={unversionedId:"Data-Governance-Handbook-for-GBADs/metadata",id:"Data-Governance-Handbook-for-GBADs/metadata",title:"Metadata",description:'Metadata is "data about data".',source:"@site/docs/Data-Governance-Handbook-for-GBADs/07-metadata.md",sourceDirName:"Data-Governance-Handbook-for-GBADs",slug:"/Data-Governance-Handbook-for-GBADs/metadata",permalink:"/es/docs/Data-Governance-Handbook-for-GBADs/metadata",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Mecanismos para el intercambio de datos",permalink:"/es/docs/Data-Governance-Handbook-for-GBADs/mechanisms"},next:{title:"Gu\xeda del colaborador de datos",permalink:"/es/docs/Data-Governance-Handbook-for-GBADs/dataContributors"}},d={},l=[{value:"Metadata Schema",id:"metadata-schema",level:2},{value:"Encoding Schema",id:"encoding-schema",level:2},{value:"&lt;!-- Metadata Content",id:"---metadata-content",level:2},{value:"Metadata Terms",id:"metadata-terms",level:2},{value:"Metadata Storage and Management",id:"metadata-storage-and-management",level:2},{value:"What is a graph database?",id:"what-is-a-graph-database",level:3},{value:"Parts of a graph database",id:"parts-of-a-graph-database",level:3}],c={toc:l};function h(e){let{components:a,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,o,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"metadata"},"Metadata"),(0,r.kt)("p",null,'Metadata is "data about data".'),(0,r.kt)("p",null,"Metadata is used to store information about data assets that are stored in the GBADs knowledge engine. We strive for metadata to be FAIR (Findable, Accessible, Interoperable, and Reusable). "),(0,r.kt)("p",null,"In addition, we collect metadata on the processes in ingesting data into the Knowledge Engine to ensure that all data lineage is tracked. "),(0,r.kt)("h2",{id:"metadata-schema"},"Metadata Schema"),(0,r.kt)("p",null,'"A metadata schema is a set of rules about what sorts of subject-predicate-object statements one is allowed to make, and how one is allowed to make them." - Jeffery Pomerantz'),(0,r.kt)("p",null,"A subject-predicate-object statement consists of: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Subject = the thing being described"),(0,r.kt)("li",{parentName:"ul"},"Object = the thing describing the subject"),(0,r.kt)("li",{parentName:"ul"},"Predicate = relationship between the subject and object")),(0,r.kt)("p",null,"For example: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Subject = FAOSTAT QCL dataset"),(0,r.kt)("li",{parentName:"ul"},"Object = FAO "),(0,r.kt)("li",{parentName:"ul"},"Predicate = creator ")),(0,r.kt)("p",null,"In this subject-predicate-object statement the FAO is the creator of the FAOSTAT QCL dataset. "),(0,r.kt)("p",null,"Based on this model, we can craete a metadata schema that defines the predicates (also called elements) that we would like to use to describe a resource. Metadata vocabularies such as ",(0,r.kt)("a",{parentName:"p",href:"https://www.dublincore.org/"},"Dublin Core"),", ",(0,r.kt)("a",{parentName:"p",href:"https://schema.org/"},"schema.org"),", ",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/prov-dm/"},"PROV-DM"),", and ",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/vocab-dcat-2/"},"DCAT")," , provide metadata elements that can be used to describe data. There is not a 'one-size-fits-all' when it comes to metadata. Several standard metadata element sets exist because what you will include in metadata depends on what your use case is. "),(0,r.kt)("p",null,"We have selected metadata elements from DCAT, schema.org, and PROV-DM to describe data and trace data lineage in the knowledge engine (see Figure below)."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"metadataModel",src:t(8588).Z,width:"809",height:"701"})),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Decision needed: "),(0,r.kt)("p",null,"Currently, keywords for metadata are created through extracting terms (like species), from data sets."),(0,r.kt)("p",null,"A controlled vocabulary needs to be created to link keywords to. We have begun to do this by collecting all species classifications and definitions from data sources, however, synonyms have not yet been identified. "),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"encoding-schema"},"Encoding Schema"),(0,r.kt)("p",null,"An encoding schema "),(0,r.kt)("h2",{id:"---metadata-content"},"\x3c!-- Metadata Content"),(0,r.kt)("p",null,"To annotate metadata terms, standard vocabularies are employed (see Appendix D). For example, all dates reported in the metadata are..."),(0,r.kt)("h2",{id:"metadata-terms"},"Metadata Terms"),(0,r.kt)("p",null,"Metadata terms are adapted from the "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://www.fao.org/3/ae909e/ae909e05.htm#P460_23819"},"International System for Agricultural Science and Technology (AGRIS) Application Profile (AP)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://dublincore.org/specifications/dublin-core"},"Dublin Core Metadata Initiative (DCMI)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://fairsharing.org/FAIRsharing.vd694s"},"Agricultural Metadata Element Set (AgMES)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This standard has been deprecated although the FAO still cites it.")))),(0,r.kt)("p",null,"An index of metadata standards can be found at the ",(0,r.kt)("a",{parentName:"p",href:"https://rdamsc.bath.ac.uk/scheme-index"},"Metadata Standards Catalog"),"."),(0,r.kt)("p",null,"GBADs will further extend and refine terms to fulfill specific needs for the governance and provenance of data collected by or\nhandled by the GBADs data portal system.\n--\x3e"),(0,r.kt)("h2",{id:"metadata-storage-and-management"},"Metadata Storage and Management"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'"All the knowledge is in connections"'),(0,r.kt)("p",{parentName:"blockquote"},"-- ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/David_Rumelhart"},"David Rumelhart")," ")),(0,r.kt)("p",null,"GBADs Informatics uses ",(0,r.kt)("a",{parentName:"p",href:"https://neo4j.com/"},"neo4j"),", a graph database management system, to manage and storage metadata and information about individuals and groups involved in the project. As you will learn in this section, a graph database is a type of database that leverages the idea of connections between entites as a method to derive insights and new knowledge from otherwise disconnected data.  "),(0,r.kt)("h3",{id:"what-is-a-graph-database"},"What is a graph database?"),(0,r.kt)("p",null,"A graph database is a type of database that stores data using relationships between main ideas or entities. The relationships between different entities show connectedness, allowing for more insights to be drawn than a traditional relational database. Because data is highly complex and multidimensional in terms of structure, provenance, governance, security and semantics, GBADs uses graph databases for master metadata management and data cataloguing. By leveraging the dynamic nature of the graph database and structuring our ",(0,r.kt)("strong",{parentName:"p"},"graph model")," in a way that enables improved understanding of the many dimensions of data, we can both visualize and understand how data flows outside and inside our organization. Graph databases also allow us to add and change the structure as the structure of the information about data changes. This will become more clear as we introduce the preliminary GBADs graph data model. "),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Traditionally, data are organized into a series of tables. Each of the tables have columns, and some tables have common columns. With these common columns you can specify joins between tables, resulting in a new table. "),(0,r.kt)("p",null,"The biggest advantage of relational databases is the ability to join common tables to derive insights. On the other hand, relational databases require rigid schemas which require database engineers to structure their data to fit the schema. This comes with the assumption that we know what all of our data already looks like, which isn't always the case for research.  "),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parts-of-a-graph-database"},"Parts of a graph database"),(0,r.kt)("p",null,"Graph databases are made up of ",(0,r.kt)("strong",{parentName:"p"},"nodes")," (entities) and ",(0,r.kt)("strong",{parentName:"p"},"edges")," (relationships). Nodes can have properties and labels while edges serve as the connection, or relationship between nodes. "),(0,r.kt)("p",null,"A graph model is a model of what kinds of nodes you are representing and how they are connected (what relationships you will have)."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://gbadske.org/Documentation/DataGovernanceHandbook/_images/20210719_GBADs_GraphModel.png",alt:"Graph Model"}),"\nd"))}h.isMDXComponent=!0},8588:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/metadataModel.drawio-b0f378c9789dc88426d90dd4a18beef6.png"}}]);